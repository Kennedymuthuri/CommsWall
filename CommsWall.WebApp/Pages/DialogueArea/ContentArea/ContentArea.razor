@using CommsWall.Core.Aggregates.ChatMessageAg;
@using CommsWall.Infrastructure.PluginInterfaces.BrowserStorage;

@inject IUserBrowserData browserData

<div class="content" id="content">
  <div class="container">
    <div class="col-md-12">
      <DateSeparator dateString="Yesterday" />
      @*
      <MessageContainer
        category="inbox"
        textMessage="I love you"
        timeStamp="12:05 am" />

      <MessageContainer
        category="outbox"
        textMessage="I love you too"
        timeStamp="12:05 am"
        deliveryStatus="sent" />

      <DateSeparator dateString="Today" />
        *@
        @if(Messages != null)
        {
            @foreach(var message in Messages)
            {  
                @if ((int) message!.SenderId != userId)
                {
                    <MessageContainer category="inbox"
                        senderId="@message!.SenderId"
                        textMessage="@message?.TextMessage"
                        timeStamp="@message?.TimeStamp.ToString()" />
                }
                else
                {
                    <MessageContainer category="outbox"
                                        textMessage="@message?.TextMessage"
                                        timeStamp="@message?.TimeStamp.ToString()" />
                }
            }
        }
      <TypingAnimation title="benkimz" avatarUrl="img/avatars/avatar.jpg" />
    </div>
  </div>
</div>

@code {
    private int userId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        LoadSessions();
    }

    private async void LoadSessions()
    {
        userId = await browserData.GetLoggedUserIdAsync();
        StateHasChanged();
    }

    [Parameter]
    public List<ChatMessage> Messages { get; set; } = new List<ChatMessage>();
} 
